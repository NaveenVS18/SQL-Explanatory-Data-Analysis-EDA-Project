/*
===============================================================================
Customer Report
===============================================================================
Purpose:
    - This report consolidates key customer metrics and behaviors

Highlights:
    1. Gathers essential fields such as names, ages, and transaction details.
	2. Segments customers into categories (VIP, Regular, New) and age groups.
    3. Aggregates customer-level metrics:
	   - total orders
	   - total sales
	   - total quantity purchased
	   - total products
	   - lifespan (in months)
    4. Calculates valuable KPIs:
	    - recency (months since last order)
		- average order value
		- average monthly spend
===============================================================================
*/
create view gold.report_customers as
with Base_query as 
(select s.order_number,s.product_key,s.order_date,s.sales_amount,s.quantity,c.customer_key,c.customer_number,CONCAT(c.first_name,' ',c.last_name) as customer_name,DATEDIFF(year,c.birth_date,GETDATE()) as age
from gold.fact_sales s left join dbo.dim_customer c on c.customer_key = s.customer_key where order_date is not null),
customer_aggregation as 
(select customer_key,customer_number,customer_name,age,count(distinct order_number) as total_orders,sum(sales_amount) as total_sales,sum(quantity) as total_quantity,count(distinct product_key) as total_products,
max(order_date) as last_order_date, DATEDIFF(month,min(order_date),max(order_date)) as Lifespan from Base_query group by customer_key,customer_number,customer_name,age)
select customer_key,customer_number,customer_name,age,
case when age < 20 then 'Minor'
     when age between 20 and 30 then 'Adult'
	 when age between 30 and 50 then 'Eligible adult'
	 else 'senior citizen'
	 end as age_group,
case when lifespan >= 12 and total_sales > 5000 then 'VIP'
     when lifespan >= 12 and  total_sales <= 5000 then 'REGULAR'
	 when lifespan < 12 then 'NEW'
	 else 'N/A'
	 end as Customer_segment,total_orders,Datediff(month,last_order_date,getdate()) as recency,total_sales,total_quantity,total_products,last_order_date,lifespan,
	 case when total_orders = 0 then 0 else total_sales/total_orders end as avg_order_value, case when lifespan = 0 then total_sales else total_sales/Lifespan end as avg_monthly_spend from customer_aggregation;
